---
- include_vars: "{{ 'packages_' + package_collection + '.yml' }}"

- name: Be sure brew is installed
  block:
  - name: Check whether brew is installed
    command: type brew
    register: brew_status
    failed_when: brew_status.rc not in [0, 1]
    changed_when: false
    check_mode: no

  # - name: Be sure brew prerequirements are installed
  #   block:
  #     - name: Check whether xcode-select is installed
  #       command: type xcode-select
  #       register: xcode_status
  #       failed_when: xcode_status.rc not in [0, 1 not found]
  #       changed_when: false

  #     - name: Install xcode-select
  #       command: xcode-select --install
  #       when: xcode_status.rc > 0

  - name: Run brew install script
    shell: /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
    when: brew_status.rc > 0

- name: Applications from homebrew repositories
  block:
  - name: Be sure repositories are tapped
    block:
    - name: Tap official repositories
      homebrew_tap:
        name: "{{ homebrew.repos.official }}"
        state: present

    - name: Be sure homemade repositories are tapped
      homebrew_tap:
        name: "{{ item.name }}"
        url: "{{ item.url }}"
        state: present
      loop: "{{ homebrew.repos.homemade }}"


  - name: Be sure homebrew is updated
    homebrew:
      update_homebrew: yes


  - name: Be sure homebrew packages are installed
    homebrew:
      name: "{{ homebrew.packages }}"
      state: present


  - name: Be sure homebrew casks are installed
    homebrew_cask:
      name: "{{ item }}"
      state: present
      install_options: "appdir=/Applications"
      accept_external_apps: yes
    loop: "{{ homebrew.casks }}"
    ignore_errors: yes


- name: Applications from Mac App Store
  block:
  - name: Be sure mas is installed
    homebrew:
      name: mas
      state: present

  - name: Get account info
    command: mas account
    register: mas_account
    failed_when: mas_account.rc >= 1
    changed_when: no
    check_mode: no

  - name: Fetch list
    command: mas list
    register: mas_list
    changed_when: no
    check_mode: no

  - name: Be sure MacApps are installed
    command: mas install "{{ item.id }}"
    when: "mas_list.stdout_lines | select('search', item.id) | list | length == 0"
    loop: "{{ apps }}"
